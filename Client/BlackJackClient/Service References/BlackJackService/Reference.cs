//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlackJackClient.BlackJackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/WCFBlackJackService.GameEngine")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BlackJackClient.BlackJackService.BlackJackHand HandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountCredit {
            get {
                return this.AccountCreditField;
            }
            set {
                if ((this.AccountCreditField.Equals(value) != true)) {
                    this.AccountCreditField = value;
                    this.RaisePropertyChanged("AccountCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Bet {
            get {
                return this.BetField;
            }
            set {
                if ((this.BetField.Equals(value) != true)) {
                    this.BetField = value;
                    this.RaisePropertyChanged("Bet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BlackJackClient.BlackJackService.BlackJackHand Hand {
            get {
                return this.HandField;
            }
            set {
                if ((object.ReferenceEquals(this.HandField, value) != true)) {
                    this.HandField = value;
                    this.RaisePropertyChanged("Hand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlackJackHand", Namespace="http://schemas.datacontract.org/2004/07/WCFBlackJackService.GameEngine.CardGameFr" +
        "amework")]
    [System.SerializableAttribute()]
    public partial class BlackJackHand : BlackJackClient.BlackJackService.Hand {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hand", Namespace="http://schemas.datacontract.org/2004/07/WCFBlackJackService.GameEngine.CardGameFr" +
        "amework")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlackJackClient.BlackJackService.BlackJackHand))]
    public partial class Hand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BlackJackClient.BlackJackService.Card[] CardsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BlackJackClient.BlackJackService.Card[] Cards {
            get {
                return this.CardsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardsField, value) != true)) {
                    this.CardsField = value;
                    this.RaisePropertyChanged("Cards");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/WCFBlackJackService.GameEngine.CardGameFr" +
        "amework")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BlackJackClient.BlackJackService.FaceValue CardFaceValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BlackJackClient.BlackJackService.Suit CardSuitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BlackJackClient.BlackJackService.FaceValue CardFaceValue {
            get {
                return this.CardFaceValueField;
            }
            set {
                if ((this.CardFaceValueField.Equals(value) != true)) {
                    this.CardFaceValueField = value;
                    this.RaisePropertyChanged("CardFaceValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BlackJackClient.BlackJackService.Suit CardSuit {
            get {
                return this.CardSuitField;
            }
            set {
                if ((this.CardSuitField.Equals(value) != true)) {
                    this.CardSuitField = value;
                    this.RaisePropertyChanged("CardSuit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaceValue", Namespace="http://schemas.datacontract.org/2004/07/WCFBlackJackService.GameEngine.CardGameFr" +
        "amework")]
    public enum FaceValue : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Three = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Four = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Five = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Six = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seven = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Eight = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nine = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ten = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jack = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queen = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        King = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ace = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Suit", Namespace="http://schemas.datacontract.org/2004/07/WCFBlackJackService.GameEngine.CardGameFr" +
        "amework")]
    public enum Suit : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diamonds = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Spades = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clubs = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hearts = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlackJackService.IBlackJackService", CallbackContract=typeof(BlackJackClient.BlackJackService.IBlackJackServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IBlackJackService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Hit")]
        void Hit(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Hit")]
        System.Threading.Tasks.Task HitAsync(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Deal")]
        void Deal(BlackJackClient.BlackJackService.Player player, decimal sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Deal")]
        System.Threading.Tasks.Task DealAsync(BlackJackClient.BlackJackService.Player player, decimal sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Stand")]
        void Stand(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Stand")]
        System.Threading.Tasks.Task StandAsync(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/Join")]
        void Join(BlackJackClient.BlackJackService.Player name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/Join")]
        System.Threading.Tasks.Task JoinAsync(BlackJackClient.BlackJackService.Player name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Leave")]
        void Leave(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/Leave")]
        System.Threading.Tasks.Task LeaveAsync(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/WantsToPlay")]
        void WantsToPlay(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IBlackJackService/WantsToPlay")]
        System.Threading.Tasks.Task WantsToPlayAsync(BlackJackClient.BlackJackService.Player player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlackJackServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerRecievedCards")]
        void PlayerRecievedCards(BlackJackClient.BlackJackService.Player player, BlackJackClient.BlackJackService.Card[] cards);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerDeal")]
        void PlayerDeal(BlackJackClient.BlackJackService.Player Player, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerStand")]
        void PlayerStand(BlackJackClient.BlackJackService.Player Player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerJoin")]
        void PlayerJoin(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerList")]
        void PlayerList(BlackJackClient.BlackJackService.Player[] list);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerLeave")]
        void PlayerLeave(BlackJackClient.BlackJackService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerJoinsSession")]
        void PlayerJoinsSession(BlackJackClient.BlackJackService.Player player, int sessionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBlackJackService/PlayerStatus")]
        void PlayerStatus(BlackJackClient.BlackJackService.Player player, string status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlackJackServiceChannel : BlackJackClient.BlackJackService.IBlackJackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlackJackServiceClient : System.ServiceModel.DuplexClientBase<BlackJackClient.BlackJackService.IBlackJackService>, BlackJackClient.BlackJackService.IBlackJackService {
        
        public BlackJackServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public BlackJackServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public BlackJackServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BlackJackServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public BlackJackServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Hit(BlackJackClient.BlackJackService.Player player) {
            base.Channel.Hit(player);
        }
        
        public System.Threading.Tasks.Task HitAsync(BlackJackClient.BlackJackService.Player player) {
            return base.Channel.HitAsync(player);
        }
        
        public void Deal(BlackJackClient.BlackJackService.Player player, decimal sum) {
            base.Channel.Deal(player, sum);
        }
        
        public System.Threading.Tasks.Task DealAsync(BlackJackClient.BlackJackService.Player player, decimal sum) {
            return base.Channel.DealAsync(player, sum);
        }
        
        public void Stand(BlackJackClient.BlackJackService.Player player) {
            base.Channel.Stand(player);
        }
        
        public System.Threading.Tasks.Task StandAsync(BlackJackClient.BlackJackService.Player player) {
            return base.Channel.StandAsync(player);
        }
        
        public void Join(BlackJackClient.BlackJackService.Player name) {
            base.Channel.Join(name);
        }
        
        public System.Threading.Tasks.Task JoinAsync(BlackJackClient.BlackJackService.Player name) {
            return base.Channel.JoinAsync(name);
        }
        
        public void Leave(BlackJackClient.BlackJackService.Player player) {
            base.Channel.Leave(player);
        }
        
        public System.Threading.Tasks.Task LeaveAsync(BlackJackClient.BlackJackService.Player player) {
            return base.Channel.LeaveAsync(player);
        }
        
        public void WantsToPlay(BlackJackClient.BlackJackService.Player player) {
            base.Channel.WantsToPlay(player);
        }
        
        public System.Threading.Tasks.Task WantsToPlayAsync(BlackJackClient.BlackJackService.Player player) {
            return base.Channel.WantsToPlayAsync(player);
        }
    }
}
